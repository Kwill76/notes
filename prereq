To install .NET build tools 2022, follow these steps:

Visit the Visual Studio Downloads page: Go to the official Visual Studio Downloads page at https://visualstudio.microsoft.com/downloads/.

Download the Visual Studio Installer: Scroll down the page and locate the "All Downloads" section. Under the "Tools for Visual Studio" category, find and click on the "Visual Studio Installer" link. This will download the Visual Studio Installer, which is used to install specific components and workloads.

Run the Visual Studio Installer: Once the installer is downloaded, run the executable file to launch the Visual Studio Installer.

Choose the workload: In the Visual Studio Installer window, you'll see various options for workloads and components. Select the ".NET build tools" workload. You can search for it using the search bar or navigate to it through the available options.

Customize installation (optional): If you want to customize the installation, click on the "Individual components" tab in the Visual Studio Installer. From there, you can select specific components or additional tools related to .NET build tools.

Install: After selecting the .NET build tools workload and any additional components, click on the "Install" button to begin the installation process.

Wait for installation: The installer will now download and install the selected components. The installation time may vary depending on your internet connection speed and the selected components.

Complete the installation: Once the installation is complete, you'll see a message indicating that the installation was successful. Click on the "Launch" button to start using the installed .NET build tools.

After completing these steps, you should have .NET build tools 2022 installed on your machine. You can now use these tools for building and managing .NET applications. Remember to regularly update your .NET build tools to stay up to date with the latest features and improvements.


Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux


To install the WiX Toolset (Windows Installer XML), follow these steps:

Visit the WiX Toolset website: Go to the official WiX Toolset website at https://wixtoolset.org/.

Download the WiX Toolset installer: On the website's home page, locate the "Download" section. Choose the version of the WiX Toolset that you want to install (e.g., WiX v3.x). Click on the appropriate download link to download the installer.

Run the installer: Once the installer is downloaded, run the executable file to launch the WiX Toolset installer.

Accept the license agreement: In the installer window, you'll be presented with the license agreement. Read through the agreement and, if you agree to the terms, select the checkbox indicating your acceptance.

Choose the installation location: Next, you'll be prompted to choose the installation location for the WiX Toolset. By default, it will suggest a location, but you can modify it if desired. Click on the "Next" button to proceed.

Select the components to install: In this step, you can select the components of the WiX Toolset that you want to install. The core components are selected by default. You can also choose additional components or extensions based on your requirements. Click on the "Next" button to continue.

Configure the installation options: In this step, you can configure additional options such as adding the WiX binaries to the system PATH environment variable, enabling automatic updates, and configuring proxy settings if needed. Make your selections and click on the "Next" button.

Install: Once you've configured the installation options, click on the "Install" button to start the installation process.

Wait for installation: The installer will now download and install the selected components of the WiX Toolset. The installation time may vary depending on your internet connection speed and the selected components.

Complete the installation: After the installation is complete, you'll see a message indicating that the installation was successful. Click on the "Finish" button to exit the installer.

After completing these steps, the WiX Toolset will be installed on your machine. You can now use WiX to create Windows Installer packages (MSI) for your applications. To verify the installation, you can open a command prompt and run candle or light commands, which are part of the WiX Toolset, to confirm that they are recognized and functioning correctly.



To install Git on a Windows virtual machine (VM), follow these steps:

Download Git: Go to the official Git website at https://git-scm.com/ and click on the "Download" button to download the Git installer for Windows.

Run the Git installer: Once the installer is downloaded, locate the executable file (e.g., Git-2.x.x.x-64-bit.exe) and run it to launch the Git installer.

Choose the installation options: In the Git installer, you'll be presented with various installation options. Leave the default options selected unless you have specific preferences. You can choose to modify the installation location, select components to install, and configure integration options. Click on the "Next" button to proceed.

Select the components: In this step, you can select additional components to install, such as Git GUI, Git Bash, and Git Credential Manager. If you're unsure, you can leave the default options selected. Click on the "Next" button to continue.

Choose the default editor: Git allows you to configure a default editor for commit messages and other operations. You can select the editor of your choice from the available options or leave the default selection. Click on the "Next" button to proceed.

Choose the default branch name: Git uses "master" as the default branch name, but you can choose a different name if desired. You can also choose whether to enable file system caching. Click on the "Next" button to continue.

Configure the PATH environment: In this step, you can choose how Git is added to the system's PATH environment variable. It is recommended to select the option "Git from the command line and also from 3rd-party software" to ensure Git is accessible from the command prompt and other applications. Click on the "Next" button to proceed.

Choose the HTTPS transport backend: Git allows you to choose between the default OpenSSL library or the Windows Secure Channel (SChannel) library for HTTPS connections. Leave the default option selected unless you have specific requirements. Click on the "Next" button to continue.

Configure line ending conversions: Git provides options for line ending conversions. The default option "Checkout Windows-style, commit Unix-style line endings" is suitable for most cases. Click on the "Next" button to proceed.

Choose the terminal emulator: You can choose between the default Windows Command Prompt or a custom terminal emulator like Git Bash. Select the option that suits your preference. Click on the "Next" button to continue.

Install Git: Review the installation summary, and if everything looks correct, click on the "Install" button to start the installation process.

Wait for installation: The Git installer will now install Git and any selected components on your Windows VM. The installation time may vary depending on your system's performance.

Complete the installation: Once the installation is complete, you'll see a confirmation message. Ensure the "Launch Git Bash" option is selected if you want to open Git Bash immediately. Click on the "Finish" button to exit the installer.

After following these steps, Git will be installed on your Windows VM. You can open the Command Prompt or Git Bash and use Git commands to manage your repositories. Remember to configure your Git identity using git config commands before making commits.





System.Exception:
starting Hyper-V VM: status code not OK but 500: Unhandled exception: job failed with message: 'DockerDesktopVM' failed to start. (Virtual machine ID FAA5DA82-4A4A-4FE9-9712-29C7612596F7)

The Virtual Machine Management Service failed to start the virtual machine 'DockerDesktopVM' because one of the Hyper-V components is not running (Virtual machine ID FAA5DA82-4A4A-4FE9-9712-29C7612596F7).
   at Docker.Engines.LinuxHyperVEngine.<DoStartAsync>d__13.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.Engines\LinuxHyperVEngine.cs:line 60
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.ApiServices.StateMachines.TaskExtensions.<WrapAsyncInCancellationException>d__0.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\TaskExtensions.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.ApiServices.StateMachines.StartTransition.<DoRunAsync>d__7.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\StartTransition.cs:line 79
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Docker.ApiServices.StateMachines.StartTransition.<DoRunAsync>d__7.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\StartTransition.cs:line 108
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.ApiServices.StateMachines.EngineStateMachine.<StartAsync>d__17.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\EngineStateMachine.cs:line 97
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.Engines.Engines.<StartAsync>d__24.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.Engines\Engines.cs:line 124

Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All


error during connect: in the default daemon configuration on Windows, the docker client must be run with elevated privileges to connect: Get "http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.24/version": open //./pipe/docker_engine: The system cannot find the file specified.

{"code":"DeploymentFailed","target":"/subscriptions/cfa57d0f-4781-45be-835b-21d03891468e/resourceGroups/rg-image-architect-poc-cus/providers/Microsoft.Resources/deployments/CreateVm-GHE_Runner_Win2019-Architect-Core-20230626104443","message":"At least one resource deployment operation failed. Please list deployment operations for details. Please see https://aka.ms/arm-deployment-operations for usage details.","details":[{"code":"ResourceDeploymentFailure","target":"/subscriptions/cfa57d0f-4781-45be-835b-21d03891468e/resourceGroups/rg-image-architect-poc-cus/providers/Microsoft.Compute/virtualMachines/l7wd2arcglr0002","message":"The resource write operation failed to complete successfully, because it reached terminal provisioning state 'Failed'."}]}


System.Exception:
starting Hyper-V VM: status code not OK but 500: Unhandled exception: job failed with message: 'DockerDesktopVM' failed to start. (Virtual machine ID E4A7A01F-AE14-4F3B-AD8A-2E4FA2557056)

The Virtual Machine Management Service failed to start the virtual machine 'DockerDesktopVM' because one of the Hyper-V components is not running (Virtual machine ID E4A7A01F-AE14-4F3B-AD8A-2E4FA2557056).
   at Docker.Engines.LinuxHyperVEngine.<DoStartAsync>d__13.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.Engines\LinuxHyperVEngine.cs:line 60
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.ApiServices.StateMachines.TaskExtensions.<WrapAsyncInCancellationException>d__0.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\TaskExtensions.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.ApiServices.StateMachines.StartTransition.<DoRunAsync>d__7.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\StartTransition.cs:line 79
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Docker.ApiServices.StateMachines.StartTransition.<DoRunAsync>d__7.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\StartTransition.cs:line 108
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.ApiServices.StateMachines.EngineStateMachine.<StartAsync>d__17.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.ApiServices\StateMachines\EngineStateMachine.cs:line 97
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.Engines.Engines.<StartAsync>d__24.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.Engines\Engines.cs:line 124

dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart

The Virtual Machine Management Service failed to start the virtual machine 'DockerDesktopVM' because one of the Hyper-V components is not running (Virtual machine ID 1970603F-FFB3-4929-97F5-40BE30A0455A).
   at Docker.Engines.LinuxHyperVEngine.<DoStartAsync>d__13.MoveNext() in C:\workspaces\PR-22253\src\github.com\docker\pinata\win\src\Docker.Engines\LinuxHyperVEngine.cs:line 60




WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.google.inject.internal.cglib.core.$ReflectUtils$1 (file:/C:/Users/sysnt/nexus-iq-cli.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
WARNING: Please consider reporting this to the maintainers of com.google.inject.internal.cglib.core.$ReflectUtils$1
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release



[ERROR] The IQ Server https://lifecycle.1dc.com could not be contacted: Connect to 10.203.92.70:8080 [/10.203.92.70] failed: Connect timed out
[ERROR] Error details below:
org.apache.http.conn.ConnectTimeoutException: Connect to 10.203.92.70:8080 [/10.203.92.70] failed: Connect timed out
        at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)
        at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
        at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:401)
        at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
        at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
        at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
        at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
        at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
        at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)
        at com.sonatype.insight.client.utils.AbstractClientBuilder$RequestBuilder.execute(AbstractClientBuilder.java:172)
        at com.sonatype.insight.client.utils.AbstractClientBuilder$RequestBuilder.get(AbstractClientBuilder.java:105)
        at com.sonatype.insight.brain.client.ConfigurationClient.validateServerVersion(ConfigurationClient.java:151)
        at com.sonatype.insight.brain.client.RestClientFactory$RestClient.validateServerVersion(RestClientFactory.java:165)
        at com.sonatype.insight.scan.cli.AbstractPolicyEvaluator.validateServerVersion(AbstractPolicyEvaluator.java:337)
        at com.sonatype.insight.scan.cli.AbstractPolicyEvaluator.validate(AbstractPolicyEvaluator.java:87)
        at com.sonatype.insight.scan.cli.AbstractPolicyEvaluator.run(AbstractPolicyEvaluator.java:68)
        at com.sonatype.insight.scan.cli.PolicyEvaluator.run(PolicyEvaluator.java:112)
        at com.sonatype.insight.scan.cli.PolicyEvaluatorCli.run(PolicyEvaluatorCli.java:56)
        at com.sonatype.insight.scan.cli.PolicyEvaluatorCli.main(PolicyEvaluatorCli.java:47)
Caused by: java.net.SocketTimeoutException: Connect timed out
        at java.base/java.net.SocksSocketImpl.readSocksReply(SocksSocketImpl.java:139)
        at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:455)
        at java.base/java.net.Socket.connect(Socket.java:608)
        at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
        at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
        ... 18 common frames omitted


Add-AppxPackage: The 'Add-AppxPackage' command was found in the module 'Appx', but the module could not be loaded due to the following error: [Operation is not supported on this platform. (0x80131539)]
For more information, run 'Import-Module Appx'.
